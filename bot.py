import logging
from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
import csv
import sqlite3
import io
from datetime import datetime

# ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™
conn = sqlite3.connect('posts.db', check_same_thread=False)
c = conn.cursor()
c.execute('''CREATE TABLE IF NOT EXISTS posts
             (id INTEGER PRIMARY KEY AUTOINCREMENT, post_text TEXT, date TEXT)''')
conn.commit()

# ‡¶≤‡¶ó‡¶ø‡¶Ç ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞‡ßá‡¶∂‡¶®
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

def start(update: Update, context: CallbackContext) -> None:
    update.message.reply_text('üéâ ‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã! ‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü ‡¶™‡¶æ‡¶†‡¶æ‡¶®, ‡¶Ü‡¶Æ‡¶ø ‡¶∏‡ßá‡¶ü‡¶ø ‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡¶¨‡•§ /getcsv ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶¶‡¶ø‡ßü‡ßá CSV ‡¶´‡¶æ‡¶á‡¶≤ ‡¶™‡¶æ‡¶¨‡ßá‡¶®‡•§')

def save_post(update: Update, context: CallbackContext) -> None:
    user = update.message.from_user
    post_text = update.message.text
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    
    c.execute("INSERT INTO posts (post_text, date) VALUES (?, ?)", (post_text, timestamp))
    conn.commit()
    logger.info(f"New post from {user.first_name}: {post_text[:50]}...")
    update.message.reply_text("‚úÖ ‡¶™‡ßã‡¶∏‡ßç‡¶ü ‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!")

def generate_csv(update: Update, context: CallbackContext) -> None:
    csv_file = io.BytesIO()
    csv_writer = csv.writer(csv_file)
    csv_writer.writerow(['ID', '‡¶™‡ßã‡¶∏‡ßç‡¶ü', '‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ'])
    
    c.execute("SELECT * FROM posts")
    for row in c.fetchall():
        csv_writer.writerow(row)
    
    csv_file.seek(0)
    csv_file.name = '‡¶∏‡¶ï‡¶≤_‡¶™‡ßã‡¶∏‡ßç‡¶ü.csv'
    update.message.reply_document(document=csv_file, caption="üìÅ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶Ç‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡¶æ ‡¶™‡ßã‡¶∏‡ßç‡¶ü‡¶ó‡ßÅ‡¶≤‡ßã:")

def main() -> None:
    # ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶¨‡¶∏‡¶æ‡¶® (‡¶è‡¶®‡¶≠‡¶æ‡ßü‡¶∞‡¶®‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶≠‡ßá‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶≠‡¶æ‡¶≤‡ßã)
    TOKEN = "7882898983:AAETpNJpJPTKy8NVnMf0Opnrzy779eJDOkQ"
    updater = Updater(7882898983:AAETpNJpJPTKy8NVnMf0Opnrzy779eJDOkQ)
    dispatcher = updater.dispatcher

    # ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞
    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CommandHandler("getcsv", generate_csv))

    # ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞
    dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, save_post))

    # ‡¶¨‡¶ü ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()